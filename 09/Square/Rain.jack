class Rain
{
	// Location on the screen
    field int x, y;
    field int loc, down;

    // The size of the square
    field int size;

    //Call constructor to build a circle
    constructor Rain new() {
 		//Function draw uses these
        let size = 10;
 		let x = 10;//left and right
 		let y = 20;//up and down
        let loc = 0;
        let down = 0;

 		do draw();

 		return this;
 	}

 	//Functions of rain
 	
 	//Randomly place rain
 	method void randomPosition() {
 		//create counter for rain
 		var int counter;
 		var boolean stop;

 		let counter = 0;
		let stop = false;
 		//create bool stop for while loop

 		//While loop which places rain
 		while(~stop)
 		{
 			//create rain object

 			//call function which will calculate rain position

 			let counter = counter + 1;
 			//if counter reaches 10, stop creating additional rain
 			if (counter = 10)
 			{
 				let stop = true;
 			}


 			//debug test
 			

 		}//end of while loop

 		do Output.printInt(5);

 		return;
 	}//end of randomPosition

 	//Draws crushing mechanism
 	method void draw() {
        do Screen.setColor(true);
        do Screen.drawCircle(x + loc, y + down, 10);
        return;
    }

    /** Deallocates the object's memory. */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    //moves circle
    method void move() {
        var boolean stop;
        let stop = false;
        
        //while(~stop)
        //{
            //change these to arrays later
        //    do Screen.setColor(false);
        //    do Screen.drawCircle(x, y, 10);
        //    let y = y + 2;
        //    do Screen.setColor(true);
        //    do Screen.drawCircle(x, (y + size) - 1, 10);
            //stop rain
        //    if ((y + size) < 254)
        //        let stop = true;
        //}

        return;
    }

    method void place() {
    	var boolean stop;
        let stop = false;

        let loc = loc + 20;
        //draw another circle on screen
        do Screen.setColor(true);
        do Screen.drawCircle(x + loc, y + down, 10);
        
        
    	return;
    }


}